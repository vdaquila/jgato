{"version":3,"sources":["CatSelector.js","CatChooser.js","Answers.js","Game.js","App.js","index.js"],"names":["CatSelector","props","handleChange","selectedOption","setState","console","log","state","maxChoices","this","cats","roundName","roundTitle","Form","Group","Label","htmlFor","className","value","onChange","options","map","cat","show_number","id","label","name","toUpperCase","airdate","isMulti","classNamePrefix","Component","CatChooser","error","isLoaded","rounds","formValid","fetch","then","res","json","result","noValidate","validated","onSubmit","event","preventDefault","stopPropagation","jeopardy_round","categories","double_jeopardy_round","final_jeopardy_round","Button","type","Answers","game_board","i","round","currentCategory","ReactHtmlParser","clues","clue","toString","replace","response","renderCategoryAnswers","Game","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6a9fd81.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Select from 'react-select';\n\n\nclass CatSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            selectedOption: null,\n        };\n    }\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n        console.log(`Option selected:`, selectedOption);\n    };\n\n\n    render() { \n        const { selectedOption } = this.state;\n        const cats = this.props.cats;\n        const roundName = this.props.roundName;\n        const roundTitle = this.props.roundTitle;\n        var maxChoices;\n\n        if (roundTitle === \"Final Jeopardy\") {\n            maxChoices = 1;\n        }\n        else {\n            maxChoices = 5;\n        }\n\n        return (\n            <Form.Group>\n                <Form.Label htmlFor=\"{roundName}\" className=\"h3\">{roundTitle}</Form.Label>\n                <small className=\"form-text text-muted\">Choose {maxChoices} {maxChoices === 1 ? 'category' : 'categories'}.</small>\n                <Select\n                    value={selectedOption}\n                    onChange={this.handleChange}\n                    options={cats.map(cat => ({value:`${cat.show_number}:${cat.id}`,label:`${cat.name.toUpperCase()} - show ${cat.show_number} - aired ${cat.airdate}`}))}\n                    name={roundName}\n                    isMulti={true}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                />\n            </Form.Group>\n          );\n    }\n}\nexport default CatSelector;","import React, { Component } from 'react';\nimport CatSelector from './CatSelector';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n//import category_picker from './category_picker'\n\nclass CatChooser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            error: null,\n            isLoaded: false,\n            rounds:{},\n            formValid:false,\n        };\n    }\n\n    /*componentDidMount(){\n        this.setState({\n            isLoaded:true,\n            rounds:category_picker,\n        })\n    }*/\n\n\n     componentDidMount() {\n        fetch(\"https://192.168.2.217:8443/api/cat_picker/?page_num=1&per_page=1000\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                rounds:result\n              });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n      }\n    \n\n    render() { \n\n        const handleSubmit = (event) => {\n            \n            event.preventDefault();\n            event.stopPropagation();\n            \n            //this.setState({formValid:true});\n        };\n\n        if (this.state.isLoaded === true) {\n            const rounds = this.state.rounds;\n            return (\n                <Form noValidate validated={this.state.formValid} onSubmit={handleSubmit} className=\"mb-5 bg-light p-3\">\n                    <CatSelector cats={rounds.jeopardy_round.categories} roundName=\"jcid\" roundTitle=\"Jeopardy\" />\n                    <CatSelector cats={rounds.double_jeopardy_round.categories} roundName=\"djcid\" roundTitle=\"Double Jeopardy\" />\n                    <CatSelector cats={rounds.final_jeopardy_round.categories} roundName=\"fjcid\" roundTitle=\"Final Jeopardy\"/>\n                    <Button type=\"submit\">Generate Game</Button>\n                </Form>\n            );\n        }\n        else {\n            return (\n                <div>Loading</div>\n            );\n        }\n    }\n}\nexport default CatChooser;","import React, { Component } from 'react';\nimport game_board from './game_board';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nclass Answers extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state={\n            error: null,\n            isLoaded: false,\n            rounds:{},\n        };\n    }\n\n    componentDidMount(){\n        this.setState({\n            isLoaded:true,\n            rounds:game_board,\n        });\n        console.log('component mounted');\n    }\n    \n    renderCategoryAnswers(i, round) {\n        const currentCategory = round.categories[i];\n        console.log(round, currentCategory);\n        \n        return (\n            <>\n                <h4>{currentCategory.name.toUpperCase()}</h4>\n                <ol>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[0].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[0].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[1].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[1].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[2].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[2].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[3].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[3].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[4].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[4].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                </ol>\n            </>\n        );\n    }\n\n    render() { \n        if (this.state.isLoaded === true) {\n            return (\n                <div className=\"row mb-5 bg-light p-3\">\n                    <div className=\"col\">\n                        <h3>Jeopardy</h3>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(0, this.state.rounds.jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(1, this.state.rounds.jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(2, this.state.rounds.jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(3, this.state.rounds.jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(4, this.state.rounds.jeopardy_round)}\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <h3>Double Jeopardy</h3>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(0, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(1, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(2, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(3, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(4, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <h3>Final Jeopardy Answer</h3>\n                        <div className=\"category\">\n                            <h4>{this.state.rounds.final_jeopardy_round.categories[0].name.toUpperCase()}</h4>\n                            <strong>Clue:</strong> {ReactHtmlParser(this.state.rounds.final_jeopardy_round.categories[0].clues[0].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                            <strong>Response:</strong> {ReactHtmlParser(this.state.rounds.final_jeopardy_round.categories[0].clues[0].response.toString().replace(\"\\\\'\",\"'\"))}\n                        </div>\n                        \n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>Loading Answers...</div>\n            );\n        }\n\n    }\n}\nexport default Answers;","import React, { Component } from 'react';\nimport CatChooser from './CatChooser';\nimport Answers from './Answers';\n\nclass Game extends Component {\n    render() {\n        return (\n            <div className=\"container game-wrapper\"> \n              <h1 className=\"display-3\">This... is... Jeopardy!</h1>\n              <CatChooser />\n              <Answers />\n           </div>\n        );\n    }\n}\nexport default Game;","import React, { Component } from 'react';\nimport Game from './Game';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Game />\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}