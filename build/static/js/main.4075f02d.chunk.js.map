{"version":3,"sources":["CatSelector.js","CatChooser.js","Answers.js","Game.js","App.js","index.js"],"names":["CatSelector","props","handleChange","bind","state","selectedOption","this","setState","onSelectorChange","roundName","maxChoices","cats","roundTitle","dangerClass","isValid","Form","Group","Label","htmlFor","className","parseInt","value","onChange","options","map","cat","id","label","name","toUpperCase","show_number","airdate","isMulti","classNamePrefix","filterOption","createFilter","ignoreAccents","Component","CatChooser","handleCategorySelection","error","isLoaded","rounds","formValid","jcid","djcid","fjcid","validSelectors","formSubmitted","fetch","then","res","json","result","selectedOptions","prevState","length","Alert","variant","renderAlert","noValidate","validated","onSubmit","event","preventDefault","stopPropagation","passBackSelections","jeopardy_round","categories","double_jeopardy_round","final_jeopardy_round","Button","type","Answers","jcidQS","selectedCategories","val","join","djcidQS","fjcidQS","i","round","currentCategory","console","log","ReactHtmlParser","clues","clue","toString","replace","response","renderCategoryAnswers","Game","getSelectedCategories","catSelections","Object","keys","renderAnswers","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4075f02d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport WindowedSelect, {createFilter} from 'react-windowed-select';\n\n\nclass CatSelector extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state={\n            selectedOption: null,\n        };\n    }\n\n    handleChange(selectedOption) {\n        this.setState({selectedOption});\n        this.props.onSelectorChange(this.props.roundName, selectedOption, this.props.maxChoices);\n        //console.log(`Option selected for ${this.props.roundName}`, selectedOption);\n    };\n\n\n    render() { \n        const { selectedOption } = this.state;\n        const cats = this.props.cats;\n        const roundName = this.props.roundName;\n        const roundTitle = this.props.roundTitle;\n        const maxChoices = this.props.maxChoices;\n        const dangerClass = (this.props.isValid ? \"\" : \" text-danger\");\n\n        return (\n            <Form.Group>\n                <Form.Label htmlFor={roundName} className={\"h3\" + dangerClass}>{roundTitle}</Form.Label>\n                <small className={\"form-text\" + dangerClass}>Choose {maxChoices} {parseInt(maxChoices) === 1 ? 'category' : 'categories'}.</small>\n                <WindowedSelect\n                    value={selectedOption}\n                    onChange={this.handleChange}\n                    options={cats.map(cat => ({value:`${cat.id}`,label:`${cat.name.toUpperCase()} - show ${cat.show_number} - aired ${cat.airdate}`}))}\n                    name={roundName}\n                    isMulti={true}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    filterOption={createFilter({ignoreAccents: false})}\n                />\n            </Form.Group>\n          );\n    }\n}\nexport default CatSelector;","import React, { Component } from 'react';\nimport CatSelector from './CatSelector';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\n//import category_picker from './category_picker'\n\nclass CatChooser extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleCategorySelection = this.handleCategorySelection.bind(this);\n        this.state={\n            error: null,\n            isLoaded: false,\n            rounds:{},\n            formValid:false,\n            jcid: [],\n            djcid: [],\n            fjcid: [],\n            validSelectors: {\n                jcid:true,\n                djcid:true,\n                fjcid:true,\n            },\n            formSubmitted:false,\n        };\n    }\n\n    /*componentDidMount(){\n        this.setState({\n            isLoaded:true,\n            rounds:category_picker,\n        })\n    }*/\n\n\n    componentDidMount() {\n        fetch(\"https://192.168.2.217:8443/api/cat_picker/\")\n            .then(res => res.json())\n            .then(\n            (result) => {\n                this.setState({\n                isLoaded: true,\n                rounds:result\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                isLoaded: true,\n                error\n                });\n            }\n        )\n    }\n\n    handleCategorySelection(roundName,selectedOptions,maxChoices) {\n        if (selectedOptions === null) {\n            selectedOptions = [];\n        }\n        this.setState({[roundName]:selectedOptions});\n        \n        if (this.state.formSubmitted){\n            this.setState(prevState => ({\n                validSelectors: {\n                ...prevState.validSelectors, \n                [roundName]: selectedOptions.length === parseInt(maxChoices)\n                }\n            }))\n        }\n        //console.log(`Option selected:`, selectedOptions);\n    }\n\n    renderAlert() {\n        if (this.state.formSubmitted === true) {\n            if (this.state.formValid === true) {\n                return <Alert variant=\"success\">Game generated!</Alert>\n            }\n            else {\n                return <Alert variant=\"danger\">Please correct the errors highlighted below.</Alert>\n            }\n        }\n        else return;\n    }\n\n    render() { \n\n        const handleSubmit = (event) => {\n            \n            event.preventDefault();\n            event.stopPropagation();\n\n            this.setState({validSelectors: {\n                jcid: (this.state.jcid.length === 5), \n                djcid: (this.state.djcid.length === 5),\n                fjcid: (this.state.fjcid.length === 1)}}, function(){\n                    this.setState({formSubmitted:true});\n                    if (this.state.validSelectors.jcid === true && this.state.validSelectors.djcid === true && this.state.validSelectors.fjcid === true) {                \n                        this.setState({formValid:true});\n                        this.props.passBackSelections(\n                            this.state.jcid.map(cat => (cat.value)),\n                            this.state.djcid.map(cat => (cat.value)),\n                            this.state.fjcid.map(cat => (cat.value)),);\n                        }                    \n                });\n        };\n\n        if (this.state.isLoaded === true) {\n            const rounds = this.state.rounds;\n            return (\n                <>\n                {this.renderAlert()}\n                <Form noValidate validated={this.state.formValid} onSubmit={handleSubmit} className=\"mb-5 bg-light p-3\">\n                    <CatSelector cats={rounds.jeopardy_round.categories} roundName=\"jcid\" roundTitle=\"Jeopardy\" maxChoices=\"5\" onSelectorChange={this.handleCategorySelection} isValid={this.state.validSelectors.jcid} />\n                    <CatSelector cats={rounds.double_jeopardy_round.categories} roundName=\"djcid\" roundTitle=\"Double Jeopardy\" maxChoices=\"5\" onSelectorChange={this.handleCategorySelection} isValid={this.state.validSelectors.djcid} />\n                    <CatSelector cats={rounds.final_jeopardy_round.categories} roundName=\"fjcid\" roundTitle=\"Final Jeopardy\" maxChoices=\"1\" onSelectorChange={this.handleCategorySelection} isValid={this.state.validSelectors.fjcid} />\n                    <Button type=\"submit\">Generate Game</Button>\n                </Form>\n                </>\n            );\n        }\n        else {\n            return (\n                <div>Loading</div>\n            );\n        }\n    }\n}\nexport default CatChooser;","import React, { Component } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nclass Answers extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state={\n            error: null,\n            isLoaded: false,\n            rounds:{},\n        };\n    }\n\n    componentDidMount() {\n        let jcidQS = this.props.selectedCategories.jcid.map(val => (\"jcid=\" + val)).join('&');\n        let djcidQS = this.props.selectedCategories.djcid.map(val => (\"djcid=\" + val)).join('&');\n        let fjcidQS = this.props.selectedCategories.fjcid.map(val => (\"fjcid=\" + val)).join('&');\n        fetch(`https://192.168.2.217:8443/api/play/?${jcidQS}&${djcidQS}&${fjcidQS}`)\n            .then(res => res.json())\n            .then(\n            (result) => {\n                this.setState({\n                isLoaded: true,\n                rounds:result\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                isLoaded: true,\n                error\n                });\n            }\n        )\n    }\n\n    /*componentDidMount(){\n        this.setState({\n            isLoaded:true,\n            rounds:game_board,\n        });\n        console.log('component mounted');\n    }*/\n    \n    renderCategoryAnswers(i, round) {\n        const currentCategory = round.categories[i];\n        console.log(round, currentCategory);\n        \n        return (\n            <>\n                <h4>{currentCategory.name.toUpperCase()}</h4>\n                <ol>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[0].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[0].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[1].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[1].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[2].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[2].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[3].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[3].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                    <li><strong>Clue:</strong> {ReactHtmlParser(currentCategory.clues[4].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                    <strong>Response:</strong> {ReactHtmlParser(currentCategory.clues[4].response.toString().replace(\"\\\\'\",\"'\"))}</li>\n                </ol>\n            </>\n        );\n    }\n\n    render() { \n        if (this.state.isLoaded === true) {\n            return (\n                <div className=\"row mb-5 bg-light p-3\">\n                    <div className=\"col\">\n                        <h3>Jeopardy</h3>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(0, this.state.rounds.jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(1, this.state.rounds.jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(2, this.state.rounds.jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(3, this.state.rounds.jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(4, this.state.rounds.jeopardy_round)}\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <h3>Double Jeopardy</h3>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(0, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(1, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(2, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(3, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                        <div className=\"category\">\n                            {this.renderCategoryAnswers(4, this.state.rounds.double_jeopardy_round)}\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <h3>Final Jeopardy Answer</h3>\n                        <div className=\"category\">\n                            <h4>{this.state.rounds.final_jeopardy_round.categories[0].name.toUpperCase()}</h4>\n                            <strong>Clue:</strong> {ReactHtmlParser(this.state.rounds.final_jeopardy_round.categories[0].clues[0].clue.toString().replace(\"\\\\'\",\"'\"))}<br />\n                            <strong>Response:</strong> {ReactHtmlParser(this.state.rounds.final_jeopardy_round.categories[0].clues[0].response.toString().replace(\"\\\\'\",\"'\"))}\n                        </div>\n                        \n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div>Loading Answers...</div>\n            );\n        }\n\n    }\n}\nexport default Answers;","import React, { Component } from 'react';\nimport CatChooser from './CatChooser';\nimport Answers from './Answers';\n\nclass Game extends Component {\n\n    constructor(props) {\n        super(props);\n        this.getSelectedCategories=this.getSelectedCategories.bind(this)\n        this.state={\n            error: null,\n            isLoaded: false,\n            catSelections:{},\n        };\n    }\n\n    getSelectedCategories(jcid,djcid,fjcid){\n        this.setState({catSelections: {jcid, djcid, fjcid}});\n    }\n\n    renderAnswers(){\n        if (Object.keys(this.state.catSelections).length !== 0) {\n            return <Answers selectedCategories={this.state.catSelections} />\n        }\n        else {\n            return;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container game-wrapper\"> \n              <h1 className=\"display-3\">This... is... Jeopardy!</h1>\n              <CatChooser passBackSelections={this.getSelectedCategories} />\n              {this.renderAnswers()}\n              <div>Boards?</div>\n           </div>\n        );\n    }\n}\nexport default Game;","import React, { Component } from 'react';\nimport Game from './Game';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Game />\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}